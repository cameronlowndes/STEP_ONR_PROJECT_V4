{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\herib\\\\Desktop\\\\coding folder\\\\IT online learning\\\\novamart_orcal_post\\\\frontend\\\\src\\\\Login.js\";\nimport React, { useState } from 'react';\nimport { useAuth } from './AuthContext'; // Adjust the import based on your file structure\nimport { useNavigate } from 'react-router-dom';\nconst Login = () => {\n  const {\n    login\n  } = useAuth();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false); // State to toggle password visibility\n  const [error, setError] = useState(''); // State for error message\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    // Basic validation (could be expanded)\n    if (!email || !password) {\n      setError('Email and password are required');\n      return;\n    }\n\n    // Email format validation\n    const isValidEmail = /\\S+@\\S+\\.\\S+/;\n    if (!isValidEmail.test(email)) {\n      setError('Please enter a valid email address');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Invalid email or password');\n      }\n      const data = await response.json();\n      login({\n        email: data.email,\n        role: data.role\n      }); // Login the user\n      navigate('/'); // Navigate to home page or another protected page\n    } catch (error) {\n      setError(error.message); // Set error message on failure\n    }\n  };\n  const handleAutoLogin = () => {\n    // For testing only - ensure this is not used in production\n    login({\n      email: 'admin@example.com',\n      role: 'admin'\n    });\n    navigate('/');\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-full max-w-md p-8 space-y-6 bg-white rounded-lg shadow-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-4xl font-bold text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Login\"), error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-red-500 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 27\n    }\n  }, error), \" \", /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleLogin,\n    className: \"space-y-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    className: \"block mb-1 text-sm font-medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, \"Email:\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    type: \"email\",\n    value: email,\n    onChange: e => {\n      setEmail(e.target.value);\n      setError(''); // Clear error on input change\n    },\n    required: true,\n    className: \"w-full p-2 border border-gray-300 rounded focus:outline-none\",\n    placeholder: \"Enter your email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    className: \"block mb-1 text-sm font-medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    type: showPassword ? 'text' : 'password',\n    value: password,\n    onChange: e => {\n      setPassword(e.target.value);\n      setError(''); // Clear error on input change\n    },\n    required: true,\n    className: \"w-full p-2 border border-gray-300 rounded focus:outline-none\",\n    placeholder: \"Enter your password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: showPassword,\n    onChange: () => setShowPassword(prev => !prev),\n    className: \"mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, \"Show Password\"))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"w-full py-2 font-semibold text-white bg-blue-600 rounded hover:bg-blue-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, \"Login\")), process.env.NODE_ENV === 'development' && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAutoLogin,\n    className: \"mt-4 w-full py-2 font-semibold text-white bg-green-600 rounded hover:bg-green-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, \"Auto Login as Admin\")));\n};\nexport default Login;","map":{"version":3,"names":["React","useState","useAuth","useNavigate","Login","login","email","setEmail","password","setPassword","showPassword","setShowPassword","error","setError","navigate","handleLogin","e","preventDefault","isValidEmail","test","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","role","message","handleAutoLogin","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","value","onChange","target","required","placeholder","checked","prev","process","env","NODE_ENV","onClick"],"sources":["C:/Users/herib/Desktop/coding folder/IT online learning/novamart_orcal_post/frontend/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useAuth } from './AuthContext'; // Adjust the import based on your file structure\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n    const { login } = useAuth();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [showPassword, setShowPassword] = useState(false); // State to toggle password visibility\r\n    const [error, setError] = useState(''); // State for error message\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        // Basic validation (could be expanded)\r\n        if (!email || !password) {\r\n            setError('Email and password are required');\r\n            return;\r\n        }\r\n\r\n        // Email format validation\r\n        const isValidEmail = /\\S+@\\S+\\.\\S+/;\r\n        if (!isValidEmail.test(email)) {\r\n            setError('Please enter a valid email address');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ email, password }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Invalid email or password');\r\n            }\r\n\r\n            const data = await response.json();\r\n            login({ email: data.email, role: data.role });  // Login the user\r\n            navigate('/');  // Navigate to home page or another protected page\r\n        } catch (error) {\r\n            setError(error.message);  // Set error message on failure\r\n        }\r\n    };\r\n\r\n    const handleAutoLogin = () => {\r\n        // For testing only - ensure this is not used in production\r\n        login({ email: 'admin@example.com', role: 'admin' });\r\n        navigate('/');\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100\">\r\n            <div className=\"w-full max-w-md p-8 space-y-6 bg-white rounded-lg shadow-lg\">\r\n                <h2 className=\"text-4xl font-bold text-center\">Login</h2>\r\n                {error && <p className=\"text-red-500 text-center\">{error}</p>} {/* Error message displayed */}\r\n                <form onSubmit={handleLogin} className=\"space-y-4\">\r\n                    <div>\r\n                        <label htmlFor=\"email\" className=\"block mb-1 text-sm font-medium\">Email:</label>\r\n                        <input\r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            value={email}\r\n                            onChange={(e) => {\r\n                                setEmail(e.target.value);\r\n                                setError(''); // Clear error on input change\r\n                            }}\r\n                            required\r\n                            className=\"w-full p-2 border border-gray-300 rounded focus:outline-none\"\r\n                            placeholder=\"Enter your email\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"password\" className=\"block mb-1 text-sm font-medium\">Password:</label>\r\n                        <input\r\n                            id=\"password\"\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            value={password}\r\n                            onChange={(e) => {\r\n                                setPassword(e.target.value);\r\n                                setError(''); // Clear error on input change\r\n                            }}\r\n                            required\r\n                            className=\"w-full p-2 border border-gray-300 rounded focus:outline-none\"\r\n                            placeholder=\"Enter your password\"\r\n                        />\r\n                        <div className=\"flex items-center mt-2\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                checked={showPassword}\r\n                                onChange={() => setShowPassword((prev) => !prev)}\r\n                                className=\"mr-2\"\r\n                            />\r\n                            <span>Show Password</span>\r\n                        </div>\r\n                    </div>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"w-full py-2 font-semibold text-white bg-blue-600 rounded hover:bg-blue-700\"\r\n                    >\r\n                        Login\r\n                    </button>\r\n                </form>\r\n                {process.env.NODE_ENV === 'development' && (\r\n                    <button\r\n                        onClick={handleAutoLogin}\r\n                        className=\"mt-4 w-full py-2 font-semibold text-white bg-green-600 rounded hover:bg-green-700\"\r\n                    >\r\n                        Auto Login as Admin\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}