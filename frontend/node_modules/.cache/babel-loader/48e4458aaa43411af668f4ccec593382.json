{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\herib\\\\Desktop\\\\coding folder\\\\IT online learning\\\\novamart_orcal_post\\\\frontend\\\\src\\\\AuthContext.js\";\nimport React, { createContext, useContext, useState, useMemo, useEffect } from 'react';\n\n// Set up the AuthContext\nconst AuthContext = createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  const [currentUser, setCurrentUser] = useState(() => {\n    try {\n      // Check for stored user data in localStorage\n      const user = localStorage.getItem('currentUser');\n      return user ? JSON.parse(user) : null;\n    } catch (error) {\n      console.error('Error parsing user data:', error);\n      return null;\n    }\n  });\n  const [error, setError] = useState(null); // State to hold login errors\n\n  useEffect(() => {\n    console.log('Current User:', currentUser);\n  }, [currentUser]);\n\n  // Function to log in the user\n  const login = async (email, password) => {\n    setError(null); // Reset error on new login attempt\n\n    // Validate email and password\n    if (!email || !password) {\n      setError('Email and password are required');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/login', {\n        // Correct API endpoint for login\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        }) // Only sending email and password for login\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Login failed. Please check your credentials.');\n      }\n      const userData = await response.json();\n      // Store the user data in localStorage and set it in state\n      localStorage.setItem('currentUser', JSON.stringify(userData));\n      setCurrentUser(userData);\n    } catch (error) {\n      setError(error.message); // Set error message in state\n      console.error(error.message);\n    }\n  };\n\n  // Function to log out the user\n  const logout = () => {\n    // Remove user data from localStorage and reset state\n    localStorage.removeItem('currentUser');\n    setCurrentUser(null);\n    setError(null); // Clear any login errors upon logout\n  };\n\n  // Memoize the context value to avoid unnecessary re-renders\n  const contextValue = useMemo(() => ({\n    currentUser,\n    login,\n    logout,\n    isAdmin: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.role) === 'admin',\n    // Check if the current user is an admin\n    error // Include the error state in context\n  }), [currentUser, error]);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: contextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n// Custom hook to access the AuthContext\nexport const useAuth = () => useContext(AuthContext);","map":{"version":3,"names":["React","createContext","useContext","useState","useMemo","useEffect","AuthContext","AuthProvider","children","currentUser","setCurrentUser","user","localStorage","getItem","JSON","parse","error","console","setError","log","login","email","password","response","fetch","method","headers","body","stringify","ok","errorData","json","Error","userData","setItem","message","logout","removeItem","contextValue","isAdmin","role","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","useAuth"],"sources":["C:/Users/herib/Desktop/coding folder/IT online learning/novamart_orcal_post/frontend/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useMemo, useEffect } from 'react';\r\n\r\n// Set up the AuthContext\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(() => {\r\n    try {\r\n      // Check for stored user data in localStorage\r\n      const user = localStorage.getItem('currentUser');\r\n      return user ? JSON.parse(user) : null;\r\n    } catch (error) {\r\n      console.error('Error parsing user data:', error);\r\n      return null;\r\n    }\r\n  });\r\n\r\n  const [error, setError] = useState(null); // State to hold login errors\r\n\r\n  useEffect(() => {\r\n    console.log('Current User:', currentUser);\r\n  }, [currentUser]);\r\n\r\n  // Function to log in the user\r\n  const login = async (email, password) => {\r\n    setError(null); // Reset error on new login attempt\r\n\r\n    // Validate email and password\r\n    if (!email || !password) {\r\n      setError('Email and password are required');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/login', {  // Correct API endpoint for login\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),  // Only sending email and password for login\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Login failed. Please check your credentials.');\r\n      }\r\n\r\n      const userData = await response.json();\r\n      // Store the user data in localStorage and set it in state\r\n      localStorage.setItem('currentUser', JSON.stringify(userData));\r\n      setCurrentUser(userData);\r\n    } catch (error) {\r\n      setError(error.message);  // Set error message in state\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  // Function to log out the user\r\n  const logout = () => {\r\n    // Remove user data from localStorage and reset state\r\n    localStorage.removeItem('currentUser');\r\n    setCurrentUser(null);\r\n    setError(null); // Clear any login errors upon logout\r\n  };\r\n\r\n  // Memoize the context value to avoid unnecessary re-renders\r\n  const contextValue = useMemo(() => ({\r\n    currentUser,\r\n    login,\r\n    logout,\r\n    isAdmin: currentUser?.role === 'admin', // Check if the current user is an admin\r\n    error, // Include the error state in context\r\n  }), [currentUser, error]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to access the AuthContext\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,SAAS,QAAQ,OAAO;;AAEtF;AACA,MAAMC,WAAW,GAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,MAAM;IACnD,IAAI;MACF;MACA,MAAMQ,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MAChD,OAAOF,IAAI,GAAGG,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,GAAG,IAAI;IACvC,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,OAAO,IAAI;IACb;EACF,CAAC,CAAC;EAEF,MAAM,CAACA,KAAK,EAAEE,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1CE,SAAS,CAAC,MAAM;IACdY,OAAO,CAACE,GAAG,CAAC,eAAe,EAAEV,WAAW,CAAC;EAC3C,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;;EAEjB;EACA,MAAMW,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvCJ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;IAEhB;IACA,IAAI,CAACG,KAAK,IAAI,CAACC,QAAQ,EAAE;MACvBJ,QAAQ,CAAC,iCAAiC,CAAC;MAC3C;IACF;IAEA,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAAG;QACjEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEb,IAAI,CAACc,SAAS,CAAC;UAAEP,KAAK;UAAEC;QAAS,CAAC,CAAC,CAAG;MAC9C,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACd,KAAK,IAAI,8CAA8C,CAAC;MACpF;MAEA,MAAMiB,QAAQ,GAAG,MAAMV,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACtC;MACAnB,YAAY,CAACsB,OAAO,CAAC,aAAa,EAAEpB,IAAI,CAACc,SAAS,CAACK,QAAQ,CAAC,CAAC;MAC7DvB,cAAc,CAACuB,QAAQ,CAAC;IAC1B,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACdE,QAAQ,CAACF,KAAK,CAACmB,OAAO,CAAC,CAAC,CAAE;MAC1BlB,OAAO,CAACD,KAAK,CAACA,KAAK,CAACmB,OAAO,CAAC;IAC9B;EACF,CAAC;;EAED;EACA,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnB;IACAxB,YAAY,CAACyB,UAAU,CAAC,aAAa,CAAC;IACtC3B,cAAc,CAAC,IAAI,CAAC;IACpBQ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAClB,CAAC;;EAED;EACA,MAAMoB,YAAY,GAAGlC,OAAO,CAAC,OAAO;IAClCK,WAAW;IACXW,KAAK;IACLgB,MAAM;IACNG,OAAO,EAAE,CAAA9B,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE+B,IAAI,MAAK,OAAO;IAAE;IACxCxB,KAAK,CAAE;EACT,CAAC,CAAC,EAAE,CAACP,WAAW,EAAEO,KAAK,CAAC,CAAC;EAEzB,oBACEhB,KAAA,CAAAyC,aAAA,CAACnC,WAAW,CAACoC,QAAQ;IAACC,KAAK,EAAEL,YAAa;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACvCzC,QACmB,CAAC;AAE3B,CAAC;;AAED;AACA,OAAO,MAAM0C,OAAO,GAAGA,CAAA,KAAMhD,UAAU,CAACI,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}